@model DoanWeb_BanGame.Models.Game
@using System.Linq
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Games", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Game</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <label class="control-label col-md-2" for="TypeGame">Thể loại:</label>
    <div class="col-md-10">
        <fieldset>
            @if (@ViewBag.dsTheLoai != null)
            {
                for (int i = 0; i < @ViewBag.SLdsTheLoai; i++)
                {
                    for (int j = 0; j < @ViewBag.SLdsTLcuaG; j++)
                    {
                        if (@Model.Id == @ViewBag.dsTLcuaG[j].GameId)
                        {
                            if (@ViewBag.dsTLcuaG[j].TypeGameId == @ViewBag.dsTheLoai[i].Id)
                            {
                                <div class=" col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                                    <input type="checkbox" id="@ViewBag.dsTheLoai[i].Name" name="@ViewBag.dsTheLoai[i].Name" checked>
                                    <label> @ViewBag.dsTheLoai[i].Name</label>
                                </div>
                                break;
                            }

                        }

                        if (j == (@ViewBag.SLdsTLcuaG - 1))
                        {
                            <div class=" col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                                <input type="checkbox" id=@ViewBag.dsTheLoai[i].Name name=@ViewBag.dsTheLoai[i].Name value=@ViewBag.dsTheLoai[i].Name>
                                <label>@ViewBag.dsTheLoai[i].Name</label>
                            </div>
                        }
                    }
                }
            }

            else
            {

            }
        </fieldset>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" value="" name="image" id="image" required title="Chọn đường dẫn hình ảnh" src="model => model.Image" />

        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2"> <a href="@Url.Action("IndexForAGame", "PlatformDetails",new { id = @Model.Id })">Thay đổi nền tảng</a></label>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Trailer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" value="" name="video" id="video" required title="Chọn đường dẫn Video" src="model => model.Trailer" />
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublishDay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PublishDay, "{0:dd/MM/yyyy}", new
            {
            @type = "date",
            @class = "form-control"
            })
            @Html.ValidationMessageFor(model => model.PublishDay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SystemRequirememts, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.SystemRequirememts, 10, 50, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SystemRequirememts, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProducerId, "ProducerId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProducerId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProducerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublisherId, "PublisherId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PublisherId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PublisherId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Enable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Enable)
                @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
